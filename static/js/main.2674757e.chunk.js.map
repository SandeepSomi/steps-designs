{"version":3,"sources":["components/Steps.js","App.js","serviceWorker.js","index.js"],"names":["Steps","react_default","a","createElement","className","Steps_Step","React","Component","Step","App","Steps_Steps","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2674757e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Steps extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"steps-wrapper\">\r\n        <Step />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Step extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"step\">\r\n        <div className=\"vr-first first purple\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"slide purple\"></span>\r\n          <div className=\"b-ring purple\">\r\n            <div className=\"inner-ring purple\">\r\n              <p>STEP</p>\r\n              <p>1</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"semi-ring purple\"></div>\r\n          <div className=\"main-div\">\r\n            <div className=\"main purple\">\r\n              <h1>Lorem ipsum heading</h1>\r\n              <p>here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content</p>\r\n              <div className=\"semi-ring-right purple\"><i className=\"fas fa-cog\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flat-semi-ring purple\">25%</div>\r\n        </div>\r\n\r\n        <div className=\"vr-first green\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"slide green\"></span>\r\n          <div className=\"b-ring green\">\r\n            <div className=\"inner-ring green\">\r\n              <p>STEP</p>\r\n              <p>2</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"semi-ring green\"></div>\r\n          <div className=\"main-div\">\r\n            <div className=\"main green\">\r\n              <h1>Lorem ipsum heading</h1>\r\n              <p>here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content</p>\r\n              <div className=\"semi-ring-right green\"><i className=\"fas fa-lightbulb\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flat-semi-ring green\">50%</div>\r\n        </div>\r\n\r\n        <div className=\"vr-first org\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"slide org\"></span>\r\n          <div className=\"b-ring org\">\r\n            <div className=\"inner-ring org\">\r\n              <p>STEP</p>\r\n              <p>3</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"semi-ring org\"></div>\r\n          <div className=\"main-div\">\r\n            <div className=\"main org\">\r\n              <h1>Lorem ipsum heading</h1>\r\n              <p>here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content</p>\r\n              <div className=\"semi-ring-right org\"><i className=\"fas fa-home\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flat-semi-ring org\">75%</div>\r\n        </div>\r\n\r\n        <div className=\"vr-first last red\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"slide red\"></span>\r\n          <div className=\"b-ring red\">\r\n            <div className=\"inner-ring red\">\r\n              <p>STEP</p>\r\n              <p>4</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"semi-ring red\"></div>\r\n          <div className=\"main-div\">\r\n            <div className=\"main red\">\r\n              <h1>Lorem ipsum heading</h1>\r\n              <p>here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content. here goes the main content</p>\r\n              <div className=\"semi-ring-right red\"><i className=\"fas fa-seedling\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flat-semi-ring red\">100%</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport { Steps } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Steps />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../src/assets/styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}